PART
{
	// this is a sample config file, for determining a good file format for defining part parameters
	// comment line - ignored by cfg parser
	// empty lines, or lines without a '=' sign are also ignored
	// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
	// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
	// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
	// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
	// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
	// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)

	// --- general parameters ---
	//This is now technically the Mule but we don't want to break compatibility.
	name = WBI_Stagecoach
	module = Part
	author = Michael Billard (Angel-125)

	// --- asset parameters ---
	rescaleFactor = 1

	MODEL
	{
	    model = WildBlueIndustries/MCM/Assets/MultipurposeNode
	}

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0.94, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.94, 0.0, 0.0, -1.0, 0.0, 2

	node_stack_right = 1.011, 0, 0, 1, 0, 0, 2
	node_stack_left = -1.011, 0, 0, -1, 0, 0, 2

	node_stack_back = 0, 0, 1.011, 0, 0, 1, 2
	node_stack_front = 0, 0,-1.011, 0, 0, -1, 2

	// --- editor parameters ---
	TechRequired = advConstruction
	entryCost = 9000
	cost = 1600
	category = Utility
	subcategory = 0
	title = Stagecoach Multipurpose Node
	manufacturer = Wild Blue Industries
	description = Similar to the Mule, the Stagecoach holds a variety of different resources. It holds less than the Mule, but the Stagecoach has multiple attachment points.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,1

	// --- standard part parameters ---
	mass = 1.0
	dragModelType = default
	maximum_drag = 0.25
	minimum_drag = 0.25
	angularDrag = .5
	crashTolerance = 45
	breakingForce = 280
	breakingTorque = 280
	maxTemp = 1000
	skinMaxTemp = 2000
	emissiveConstant = 0.5
	CrewCapacity = 0
	vesselType = Station

	MODULE
	{
	    name = WBIConvertibleStorage
	    enableLogging = True

	    //Determines whether or not to show the context menu GUI
	    showGUI = True

	    //Short name of the default module template.
	    //This is used when selecting the part in the editor.
	    //User will then right-click on the module to change its type.
	    defaultTemplate = LFO

	    //name of the template nodes to use
	    templateNodes = STORAGE_TEMPLATE

	    //Determines if the module allows in-field reconfiguring
	    fieldReconfigurable = True

	    //Some containers don't hold as much resources as the template specifies, while others hold more.
	    //Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
	    //factor into the resource amounts.
	    capacityFactor = 0.6
	
	    //Name of the logo panel transforms
	    //logoPanelTransforms = logoPanel001, logoPanel002, logoPanel003, logoPanel004
	    decalsVisible = false

	    //If the part has a KIS container, this is the base and max amount
	    baseStorage = 200
	    maxStorage = 7500
	}

	EFFECTS
	{
		running
		{
			AUDIO_MULTI
			{
				channel = Ship
				transformName = rcsThruster
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = rcsThruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}
	
	MODULE
	{
		name = ModuleRCSFX
		stagingEnabled = False
		thrusterTransformName = rcsThruster
		thrusterPower = 1
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
		runningEffectName = running
		atmosphereCurve
		{
			key = 0 240
			key = 1 100
			key = 4 0.001
		}
	}

	MODULE:NEEDS[KIS]
	{
	    name = ModuleKISInventory
	    maxVolume = 200
	    externalAccess = true
	    internalAccess = true
	    slotsX = 10
	    slotsY = 8
	    slotSize = 50
	    itemIconResolution = 128
	    selfIconResolution = 128
	    openSndPath = KIS/Sounds/containerOpen
	    closeSndPath = KIS/Sounds/containerClose
	    defaultMoveSndPath = KIS/Sounds/itemMove
	}

}