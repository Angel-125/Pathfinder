PART
{
	// this is a sample config file, for determining a good file format for defining part parameters
	// comment line - ignored by cfg parser
	// empty lines, or lines without a '=' sign are also ignored
	// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
	// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
	// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
	// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
	// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
	// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = WBI_MCM
	module = Part
	author = Michael Billard (Angel-125)

	// --- asset parameters ---
	rescaleFactor = 1

	MODEL
	{
		model = WildBlueIndustries/MCM/Assets/MCM
	}

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 1.41, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -1.41, 0.0, 0.0, -1.0, 0.0, 2

	// --- editor parameters ---
	TechRequired = advConstruction
	entryCost = 15000
	cost = 6500
	category = Utility
	subcategory = 0
	title = Pioneer MCM
	manufacturer = Wild Blue Industries
	description = The Pioneer Multipurpose Crew Module enables builders to outfit the module for a variety of different purposes before launching and/or while out in the field. It is also conveniently shaped to fit within 2.5-meter standard payload shrouds.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,1

	// --- standard part parameters ---
	mass = 1.25
	dragModelType = default
	maximum_drag = 0.25
	minimum_drag = 0.25
	angularDrag = .5
	crashTolerance = 45
	breakingForce = 280
	breakingTorque = 280
	maxTemp = 3400
	CrewCapacity = 2

	INTERNAL
	{
		name = crewCabinInternals
	}

	MODULE 
	{
		name = OseModuleWorkshop
		ConversionRate = 1 // How much of a parts mass needs to be processed until it is done
		ProductivityFactor = 0.25 // How much units of the resource a processed per second
		UpkeepResource = ElectricCharge // This resource will be consumed 1 per second during processing
		InputResource = MaterialKits // This resource will be used to process the items
		MinimumCrew = 2 // Amount of Kerbals needed for the Workshop to work
	}

	MODULE
	{
		name = OseModuleRecycler
		ConversionRate = 0.15 // How much of a parts mass will be recycled
		ProductivityFactor = 0.25 // How much units of the resource a processed per second
		UpkeepResource = ElectricCharge // This resource will be consumed 1 per second during processing
		OutputResource = MaterialKits // This resource will be created 
		MinimumCrew = 2 // Amount of Kerbals needed for the Recycler to work
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Pods
		IconPath = Squad/PartList/SimpleIcons/RDicon_commandmodules
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = FuelTank
		IconPath = Squad/PartList/SimpleIcons/RDicon_fuelSystems-advanced
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Engine
		IconPath = Squad/PartList/SimpleIcons/RDicon_propulsionSystems
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Control
		IconPath = Squad/PartList/SimpleIcons/R&D_node_icon_largecontrol
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Structural
		IconPath = Squad/PartList/SimpleIcons/R&D_node_icon_generalconstruction
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Aero
		IconPath = Squad/PartList/SimpleIcons/R&D_node_icon_advaerodynamics
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Utility
		IconPath = Squad/PartList/SimpleIcons/R&D_node_icon_generic
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleCategoryAddon
		Category = Science
		IconPath = Squad/PartList/SimpleIcons/R&D_node_icon_advsciencetech
	}

	MODULE
	{
		name = ModuleScienceContainer
		reviewActionName = Review Stored Data
		storeActionName = Store Experiments
		evaOnlyStorage = True
		storageRange = 1.3
	}

	MODULE
	{
		name = WBIMultipurposeHab
		enableLogging = True

		showGUI = True

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 0.25

		//Determines if the part can be reconfigured out in the field.
		fieldReconfigurable = true

		//name of the template nodes to use
		templateNodes = PATH_HABITATION

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = Geology Lab

		//Name of the logo panel transforms
		decalsVisible = false

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 700
		maxStorage = 700

		opsViewTitle = Multipurpose Colony Module
	
		efficiency = 0.25
		productivity = 0.25
		materialCostModifier = 0.5
		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = MCMUpgrade1
				description__ = Efficiency: 30% Productivity: 30%
				efficiency = 0.3
				productivity = 0.3
			}
		}

		//Name of the logo panel transforms
		logoPanelTransforms = logoPanel001
		decalsVisible = true

		//Snacks
		resourcesToKeep:NEEDS[Snacks] = ElectricCharge;Snacks

		//Kerbalism
		resourcesToKeep:NEEDS[Kerbalism] = ElectricCharge;Shielding;Food;Oxygen

		//TAC-LS
		resourcesToKeep:NEEDS[TacLifeSupport] = ElectricCharge;Food;Oxygen;Water;CarbonDioxide;Waste;WasteWater

		//USI-LS
		resourcesToKeep:NEEDS[USILifeSupport] = ElectricCharge;Supplies;Mulch;ReplacementParts
	}

	MODULE
	{
		name = WBIResourceDistributor
	}

	MODULE
	{
		name = WBIEfficiencyMonitor
		efficiencyType = science
	}

	MODULE
	{
		name = WBIPropStateHelper
	}

	MODULE
	{
		name = ModuleKISInventory
		maxVolume = 700
		externalAccess = true
		internalAccess = true
		slotsX = 5
		slotsY = 5
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		openSndPath = KIS/Sounds/containerOpen
		closeSndPath = KIS/Sounds/containerClose
		defaultMoveSndPath = KIS/Sounds/itemMove
	}
	
	MODULE
	{
		name = WBIMeshHelper
		objects = BodyMachine;BodyTruss;BodyClean
		guiNames = Ground;Truss;Orbital
		showGui = true
		editorOnly = true
		showPrev = false
	}

	MODULE
	{
		name = WBILight
		animationName = MCMLights
		startEventGUIName = Lights On
		endEventGUIName = Lights Off
		actionGUIName = Toggle Lights
		red = 1
		green = 1
		blue = 1
		intensity = 1
		ecRequired = 0.04
		animationLayer = 12
	}

	EFFECTS
	{
		running
		{
			AUDIO_MULTI
			{
				channel = Ship
				transformName = rcsThruster
				clip = sound_rocket_mini
				volume = 0.0 0.0
				volume = 0.1 0.0
				volume = 0.5 0.025
				volume = 1.0 0.1
				pitch = 0.0 0.75
				pitch = 1.0 1.5
				loop = true
			}
			MODEL_MULTI_PARTICLE
			{
				modelName = Squad/FX/Monoprop_small
				transformName = rcsThruster
				emission = 0.0 0.0
				emission = 0.1 0.0
				emission = 1.0 1.0
				speed = 0.0 0.8
				speed = 1.0 1.0
				localRotation = -90, 0, 0
			}
		}		
	}
	
	MODULE
	{
		name = ModuleRCSFX
		moduleIsEnabled = false
		stagingEnabled = False
		thrusterTransformName = rcsThruster
		thrusterPower = 1
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW
		runningEffectName = running
		atmosphereCurve
		{
			key = 0 240
			key = 1 100
			key = 4 0.001
		}

		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = WBIFlightControl1
				description__ = Has Reaction Control System (RCS)
				moduleIsEnabled = true
			}
		}
	}

	MODULE
	{
		name = FlagDecal
		textureQuadName = flagTransform
	}
}

@PART[WBI_MCM]:NEEDS[Impact]
{
	MODULE
	{
		name = Seismometer
	}
}

PARTUPGRADE:NEEDS[Pathfinder]
{
	name = MCMUpgrade1
	partIcon = WBI.MCM
	techRequired = fieldScience
	entryCost = 5000
	cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
	
	title = MCM Efficiency Upgrade
	basicInfo = Efficiency (Speed): 30%\nEfficiency (Output): 30%
	manufacturer = Wild Blue Industries
	description = Process improvements and tech innovations have improved speed and output.
}