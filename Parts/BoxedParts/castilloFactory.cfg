PART
{
	name = wbiCastilloFactory
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Pathfinder/Parts/BoxedParts/castilloFactory
	}
	rescaleFactor = 1

	node_attach = 0, 0, 0, 0, -1, 0, 1
	node_stack_bottom = 0, 0, 0, 0, -1, 0, 1
	node_stack_top = 0, 0.8288187, 0, 0, 1, 0, 1

	NODE
	{
		name = Node1
		transform = node1
		size = 2
		method = FIXED_JOINT
		rigid = true
	}

	NODE
	{
		name = Node2
		transform = node2
		size = 2
		method = FIXED_JOINT
		rigid = true
	}

	NODE
	{
		name = Node3
		transform = node3
		size = 2
		method = FIXED_JOINT
		rigid = true
	}

	NODE
	{
		name = Node4
		transform = node4
		size = 2
		method = FIXED_JOINT
		rigid = true
	}

	NODE
	{
		name = Node5
		transform = node5
		size = 2
		method = FIXED_JOINT
		rigid = true
	}


	NODE
	{
		name = Node6
		transform = node6
		size = 2
		method = FIXED_JOINT
		rigid = true
	}


	NODE
	{
		name = Node7
		transform = node7
		size = 2
		method = FIXED_JOINT
		rigid = true
	}

	NODE
	{
		name = Node8
		transform = node8
		size = 2
		method = FIXED_JOINT
		rigid = true
	}

	TechRequired = composites
	entryCost = 50000
	cost = 6200
	category = Utility
	subcategory = 0
	title = Castillo Factory
	manufacturer = Wild Blue Industries
	description = Part of the Castillo line of parts, the factory not only has numerous omni converters, it can provide efficiency improvements if staffed. The more kerbals in the factory, the higher the efficiency bonus.
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,1

	// --- standard part parameters ---
	mass = 0.06
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 70
	maxTemp = 900
	breakingForce = 500000
	breakingTorque = 500000
	bulkheadProfiles = size1, srf
	stackSymmetry = 7
	CrewCapacity = 0
	vesselType = Base

	INTERNAL
	{
		name = wbiFactoryIVA
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.02777778
		}
		hasHibernation = True
		hibernationMultiplier = 0.004
	}
	MODULE:NEEDS[KIS]
	{
		name = ModuleKISItemEvaTweaker
		volumeOverride = 1100
		editorItemsCategory = false
		carriable = true
		equipMode = part
		equipSlot = jetpack
		equipBoneName = aliasJetpack
		equipPos = 0,-0.2,-0.45
		equipDir = 0,0,0
		runSpeed = 0.8
		allowPartAttach = 1
	}

	MODULE:NEEDS[KIS]
	{
		name = ModuleKISInventory
		maxVolume = 5000
		externalAccess = true
		internalAccess = true
		slotsX = 5
		slotsY = 5
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		openSndPath = KIS/Sounds/containerOpen
		closeSndPath = KIS/Sounds/containerClose
		defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE
	{
		name = ModuleGroundPart
		packedVolume = 1100
	}

	MODULE
	{
		name = ModuleInventoryPart		
		InventorySlots = 24
		packedVolumeLimit = 11000
	}

	MODULE
	{
		name = ModuleColorChanger
		shaderProperty = _EmissiveColor
		animRate = 0.8
		animState = false
		useRate = true
		toggleInEditor = true
		toggleInFlight = true
		toggleInFlight = true
		unfocusedRange = 5
		toggleName = #autoLOC_502011 //#autoLOC_502011 = Toggle Lights
		eventOnName = #autoLOC_502012 //#autoLOC_502012 = Lights On
		eventOffName = #autoLOC_502013 //#autoLOC_502013 = Lights Off
		toggleAction = True
		defaultActionGroup = Light
		redCurve
		{
			key = 0 0 0 3
			key = 1 1 0 0
		}
		greenCurve
		{
			key = 0 0 0 1
			key = 1 1 1 0
		}
		blueCurve
		{
			key = 0 0 0 0
			key = 1 0.7 1.5 0
		}
		alphaCurve
		{
			key = 0 1
		}
	}

	MODULE
	{
		name = WBIKISInventoryManager
	}

	MODULE
	{
		name = WBIEfficiencyBonus

		//This is added to the mulitplier of all the bonus efficiencies.
		bonusValue = 4

		//You only get the full bonus when you fully staff the part.
		requiresFullCrew = true
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 1
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 2
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 2
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 3
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 3
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 4
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 5
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 6
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 7
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 8
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 300
		ConverterName = OmniConverter 4
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 2
	}

	MODULE
	{
		name = WBIOmniStorage

		storageVolume = 11000

		//Adjust storage volume to account for resource switcher's capacity factor.
		accountForSwitcherCapacity = true

		//Skill required to reconfigure the container.
		reconfigureSkill = ConverterSkill

		//Minimum rank to reconfigure the container.
		reconfigureRank = 1

		//Resource required to reconfigure the container.
		requiredResource = Equipment

		//Amount of the required resource to reconfigure the container.
		requiredAmount = 0

		//Blacklisted resources that can't be added to the container.
		//Separate by semicolon. Below is the default.
		resourceBlacklist = GeoEnergy;ElectroPlasma;CoreHeat;Atmosphere;CompressedAtmosphere;LabTime;ExposureTime;ScopeTime;SolarReports;SimulatorTime;GravityWaves;IntakeAir;StaticCharge;EVA Propellant;Plants
	}

	MODULE
	{
		name = WBIResourceDistributor
	}
	MODULE:NEEDS[Sandcastle]
	{
		name = WBIPrintShop

		// The maximum volume that the printer can print, in liters. Set to less than 0 for no restrictions.
		maxPrintVolume = 11000

		// The number of resource units per second that the printer can print.
		printSpeedUSec = 0.25

		// Flag to indicate whether or not to allow specialists to improve the print speed. 
		// Exactly how the specialist does that is a trade secret.
		UseSpecialistBonus = true

		// Per experience rating, how much to improve the print speed by.
		// The print shop part must have crew capacity.
		SpecialistBonus = 0.05

		// The skill required to improve the print speed.
		ExperienceEffect = "ConverterSkill"

		// Name of the effect to play from the part's EFFECTS node when the printer is running.
//		runningEffect = 

		// Name of the animation to play when the printer is running.
		animationName = PrinterAnim

		// The printer itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 10
		}

		// Normally, 3D printers can print from any category, but you can create specialized printers
		// that can only print from one or more categories. To do so, simply specify a CATEGORY_WHITELIST
		// and one or more whitelistedCategory entries.
//		CATEGORY_WHITELIST
//		{
//			whitelistedCategory = Pods
//			whitelistedCategory = Electrical
//			whitelistedCategory = none
//		}

		// Normally, 3D printers can print any part that fits in its maxPrintVolume, but you can create specialized printers
		// that can only print one or more parts. To do so, simply specify a PARTS_WHITELIST and one or more whitelistedPart entries.
		// Parts on the whitelist can be printed even if they show up on the global PARTS_BLACKLIST.
//		PARTS_WHITELIST
//		{
//			whitelistedPart = batteryPack
//			whitelistedPart = probeCoreCube
//		}

		// Normally, 3D printers can print any part that fits in its maxPrintVolume, but you can create specialized printers
		// that are incapable of printing parts on this list. To do so, simply specify a PARTS_BLACKLIST and one or more blacklistedPart entries.
//		PARTS_BLACKLIST
//		{
//			blacklistedPart = whoopieCushions
//			blacklistedPart = boomerangFish
//		}
	}

	MODULE:NEEDS[Sandcastle]
	{
		name = WBICargoRecycler
		
		// The number of units of a resource to recycle per second.
		recycleSpeedUSec = 0.5

		// What percentage of the resources that can be recycled.
		recyclePercentage = 0.45

		// Flag to indicate whether or not to allow specialists to improve the recycle speed. 
		// Exactly how the specialist does that is a trade secret.
		UseSpecialistBonus = true

		// Per experience rating, how much to improve the recycle speed by.
		// The recycler part must have crew capacity.
		SpecialistBonus = 0.05

		// The skill required to improve the recycling speed.
		ExperienceEffect = "ConverterSkill"

		// Name of the effect to play from the part's EFFECTS node when the recycler is running.
//		runningEffect = 

		// Name of the animation to play when the printer is running.
		animationName = PrinterAnim

		// The recycler itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 5
		}
	}

	//EL Workshop
	MODULE
	{
		name = ELWorkshop
		ProductivityFactor = 5.25
	}

	MODULE
	{
		name = WBIPackingBox

		staticAttachOnDeploy = true

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Determines whether or not the part is inflatable
		isInflatable = True
		isOneShot = true

		//Fills resources if the part is assembled in the editor
		fillToMaxInEditor = true

		//Name of inflatable animation
		animationName = Deploy

		//GUI name of deploy animation
		startEventGUIName = Assemble

		//GUI name of retract animation
		endEventGUIName = Collapse (EDITOR ONLY)

		//Crew capacity when inflated
		inflatedCrewCapacity = 21

		//Determines if the part can be reconfigured out in the field.
		fieldReconfigurable = false

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 0.0001
		maxStorage = 20000

		partToolTipTitle = Your First Castillo Factory
		partToolTip = The Castillo Factory is a large production facility that's able to produce a variety of different resources.

		opsViewTitle = Castillo Operations
		templateName = none

		//Snacks
		resourcesToKeep:NEEDS[SnacksUtils] = ElectricCharge;Snacks;FreshAir;StaleAir;FreshAir;HydrazineVodka

		//TAC-LS
		resourcesToKeep:NEEDS[TacLifeSupport] = ElectricCharge;Food;Oxygen;Water;CarbonDioxide;Waste;WasteWater

		//List of part modules that should be enabled/disabled depending upon whether or not the part is deployed.
		MANAGED_MODULES
		{
			moduleName = ModuleColorChanger
			moduleName = ModuleKISInventory
			moduleName = WBIKISInventoryManager
			moduleName = WBIOmniConverter
			moduleName = WBIOmniStorage
			moduleName = WBIEfficiencyBonus
			moduleName = WBIResourceDistributor
			moduleName = WBIPrintShop
			moduleName = WBICargoRecycler
			moduleName = ELWorkshop
			moduleName = ModuleFuelPump
			moduleName = ModuleSeatChanger
			moduleName = ModuleSuitSwitcher
			moduleName = ModuleInventoryPart
		}

		//List of resources needed to unpack the part.
		INPUT_RESOURCE
		{
			ResourceName = Konkrete
			Ratio = 15625
		}

		INPUT_RESOURCE
		{
			ResourceName = Equipment
			Ratio = 1000
		}
	}

	MODULE
	{
		name = WBIPropStateHelper
	}

	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		quality = 50
		mtbf = 2556
		showGui = false
	}

	//EL Recipe needed to build the part.
	EL_Recipe
	{
		structure = 1
		Resources
		{
			Konkrete = 0.75
			RocketParts = 0.25
		}
	}
}

@PART[KIS_ContainerMount1]:NEEDS[KIS]
{
	@MODULE[ModuleKISPartMount]
	{
		@MOUNT
		{
			allowedPartName = wbiCastilloFactory
		}
	}
}

PART_TIP
{
	name = wbiRanchHouse2
	description = The Castillo REQUIRES resource distribtion to be turned on, and a nearby storage container with the necessary resources, in order to be assembled. HINT: When placing the part on the ground, make sure the boxes along the perimiter don't collide with nearby parts.
}
