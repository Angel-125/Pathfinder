PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = WBI_Hacienda
	module = Part
	author = Michael Billard (Angel-125)

	// --- asset parameters ---
	rescaleFactor = 1

	MODEL
	{
		model = WildBlueIndustries/Pathfinder/Assets/Hacienda
	}

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_back = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2
	node_stack_front = 0, 0.0, -8.677, 0, 0, -1, 2
	node_stack_left = -2.08, 0.0, -3.533, -1, 0, 0, 2
	node_stack_right = 2.08, 0.0, -3.533, 1, 0, 0, 2
	node_stack_left2 = -2.08, 0.0, -6.704, -1, 0, 0, 2
	node_stack_right2 = 2.08, 0.0, -6.704, 1, 0, 0, 2
	node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 2

	NODE
	{
		name = rackMount
		transform = RackNode
	}

	// --- editor parameters ---
	TechRequired = specializedConstruction
	entryCost = 24000
	cost = 15000
	category = Utility
	subcategory = 0
	title = Hacienda IMF
	manufacturer = Wild Blue Industries
	description = The Hacienda Inflatable Multipurpose Factory (IMF) has the works. Specifically, it has the Ironworks Foundry, where you can smelt metals and create RocketParts. Other works are possible with the right upgrades.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,1

	// --- standard part parameters ---
	mass = 0.025
	dragModelType = default
	maximum_drag = 0.25
	minimum_drag = 0.25
	angularDrag = .25
	crashTolerance = 45
	breakingForce = 2800
	breakingTorque = 2800
	maxTemp = 1000
	skinMaxTemp = 2000
	emissiveConstant = 0.5
	CrewCapacity = 4
	vesselType = Base
	fuelCrossFeed = True

	INTERNAL
	{
		name = WBI_HaciendaSpace
	}

	MODULE
	{
		name = WBIGoldStrikeDrill
		HarvesterType = 0
		Efficiency = 1.5
		ResourceName = Ore
		ConverterName = Ore
		StartActionName = Start Ore
		StopActionName = Stop Ore
		ImpactTransform = ImpactTransform
		ImpactRange = 15
		AutoShutdown = true
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = DrillSkill
		EfficiencyBonus = 1
		GeneratesHeat = false

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
		}
	}

	MODULE:NEEDS[Workshop] 
	{
		name = OseModuleWorkshop
		ProductivityFactor = 0.04 // Consumption rate of each required resource in units/sec.
		SpecialistEfficiencyFactor = 0.008 //Additional unit/sec of each resource that will be consumed, per experience star of the specialist.
		ExperienceEffect = RepairSkill //Skill required for the increased efficiency.
		UpkeepResource = ElectricCharge // This resource will be consumed 1 per second during processing
		MinimumCrew = 3 // Amount of Kerbals needed for the Workshop to work
	}

	MODULE:NEEDS[Workshop]
	{
		name = OseModuleRecycler
		ConversionRate = 0.45 // How much of a parts mass will be recycled
		ProductivityFactor = 0.04 // Recycle rate of each required resource in units/sec.
		SpecialistEfficiencyFactor = 0.008 //Additional unit/sec of each resource that will be recycled, per experience star of the specialist.
		ExperienceEffect = RepairSkill //Skill required for the increased efficiency.
		UpkeepResource = ElectricCharge // This resource will be consumed 1 per second during processing
		MinimumCrew = 3 // Amount of Kerbals needed for the Recycler to work
	}

	MODULE
	{
		name = WBIMultipurposeHab
		enableLogging = True

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Determines whether or not the part is inflatable
		isInflatable = True
		
		//Lets you reconfigure the part when deflated.
		canConfigureWhenDeflated = true

		//Name of inflatable animation
		animationName = Deploy

		//GUI name of deploy animation
		startEventGUIName = Assemble

		//GUI name of retract animation
		endEventGUIName = Disassemble

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 1.0

		//Crew capacity when inflated
		inflatedCrewCapacity = 4

		//Determines if the part can be reconfigured out in the field.
		fieldReconfigurable = true

		//name of the template nodes to use
		templateNodes = PATH_INDUSTRY;HOTSPRINGS

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = Ironworks
		templateName = Ironworks

		//Name of the logo panel transforms
		logoPanelTransforms = logoPanel001, logoPanel002, logoPanel003
		decalsVisible = false

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 14500
		maxStorage = 14500

		partToolTipTitle = Your First Industrial Plant
		partToolTip = This module is the cornerstone for all your industrial needs. It is a captain of industry; resources created in the module's various configurations will benefit from metallurgic analysis.
		opsViewTitle = Hacienda Operations

		//Snacks
		resourcesToKeep:NEEDS[SnacksUtils] = Snacks;FreshAir;HydrazineVodka

		//Kerbalism
		resourcesToKeep:NEEDS[Kerbalism] = Shielding;Food;Oxygen

		//TAC-LS
		resourcesToKeep:NEEDS[TacLifeSupport] = Food;Oxygen;Water;CarbonDioxide;Waste;WasteWater

		//USI-LS
		resourcesToKeep:NEEDS[USILifeSupport] = Supplies;Mulch;Machinery;ColonySupplies

	}

	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		quality = 20
		mtbf = 720
		guiVisible = false

		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = PathfinderQuality1
				description__ = Quality: 75; MTBF: 800hrs
				techRequired__ = advMetalWorks
				mtbf = 800
				quality = 25
			}
			UPGRADE
			{
				name__ = PathfinderQuality2
				description__ = Quality: 100; MTBF: 900hrs
				techRequired__ = metaMaterials
				mtbf = 900
				quality = 30
			}
		}
	}

	MODULE
	{
		name = WBIResourceDistributor
		resourceBlacklist = ReplacementParts;GeoEnergy
	}

	MODULE
	{
		name = WBIEfficiencyMonitor
		efficiencyType = industry
	}

	MODULE
	{
		name = WBILight
		animationName = HaciendaLights
		startEventGUIName = Lights On
		endEventGUIName = Lights Off
		ecRequired = 0.001
	}

	MODULE:NEEDS[KIS]
	{
		name = ModuleKISInventory
		maxVolume = 14500
		externalAccess = true
		internalAccess = true
		slotsX = 5
		slotsY = 5
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		openSndPath = KIS/Sounds/containerOpen
		closeSndPath = KIS/Sounds/containerClose
		defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE:NEEDS[KIS]
	{
		name = ModuleKISItemEvaTweaker
		editorItemsCategory = false
		carriable = true
		equipMode = part
		equipSlot = jetpack
		equipBoneName = aliasJetpack
		equipPos = 0,0.45,0
		equipDir = 0,0,0
		runSpeed = 0.8
		volumeOverride = 400
	}

	MODULE
	{
		name = ModuleGroundPart
		packedVolume = 400
	}

	MODULE
	{
		name = ModuleInventoryPart		
		InventorySlots = 24
		packedVolumeLimit = 11000
	}

	MODULE
	{
		name = WBIPropStateHelper
	}

}
