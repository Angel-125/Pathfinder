PATH_HABITATION:NEEDS[Sandcastle]
{
	author = Angel-125
	name = Sandcastle
	title = Sandcastle 3D Print Shop
	shortName = Sandcastle
	needs = Sandcastle
	TechRequired = advExploration
	description = Forget to bring some repair kits? Need a spare battery? The Sandcastle 3D Print Shop has you covered. The Sandcastle uses additive manufacturing to turn ordinary ore into the parts that you need. It can do the reverse as well, thought not as efficiently.
	mass = 1.5
	requiredResource = Equipment
	requiredAmount = 600
	reconfigureSkill = ConverterSkill
	logoPanel = WildBlueIndustries/000WildBlueTools/Decals/Workshop
	glowPanel = WildBlueIndustries/000WildBlueTools/Decals/WorkshopGlow
	toolTip = Need a spare part? The Sandcastle has you covered. Just be sure to stock up on Ore.
	toolTipTitle = Your First Sandcastle!
	templateTags = moleHab;dsevHab;airshipHab

	MODULE
	{
		name = WBIPrintShop

		// The maximum volume that the printer can print, in liters. Set to less than 0 for no restrictions.
		maxPrintVolume = 600

		// The number of resource units per second that the printer can print.
		printSpeedUSec = 1

		// Flag to indicate whether or not to allow specialists to improve the print speed. 
		// Exactly how the specialist does that is a trade secret.
		UseSpecialistBonus = true

		// Per experience rating, how much to improve the print speed by.
		// The print shop part must have crew capacity.
		SpecialistBonus = 0.05

		// The skill required to improve the print speed.
		ExperienceEffect = "ConverterSkill"

		// Name of the effect to play from the part's EFFECTS node when the printer is running.
//		runningEffect = 

		// Name of the animation to play when the printer is running.
//		animationName = 

		// The printer itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 5
		}

		// Normally, 3D printers can print from any category, but you can create specialized printers
		// that can only print from one or more categories. To do so, simply specify a CATEGORY_WHITELIST
		// and one or more whitelistedCategory entries.
//		CATEGORY_WHITELIST
//		{
//			whitelistedCategory = Pods
//			whitelistedCategory = Electrical
//			whitelistedCategory = none
//		}

		// Normally, 3D printers can print any part that fits in its maxPrintVolume, but you can create specialized printers
		// that can only print one or more parts. To do so, simply specify a PARTS_WHITELIST and one or more whitelistedPart entries.
		// Parts on the whitelist can be printed even if they show up on the global PARTS_BLACKLIST.
//		PARTS_WHITELIST
//		{
//			whitelistedPart = batteryPack
//			whitelistedPart = probeCoreCube
//		}

		// Normally, 3D printers can print any part that fits in its maxPrintVolume, but you can create specialized printers
		// that are incapable of printing parts on this list. To do so, simply specify a PARTS_BLACKLIST and one or more blacklistedPart entries.
//		PARTS_BLACKLIST
//		{
//			blacklistedPart = whoopieCushions
//			blacklistedPart = boomerangFish
//		}
	}

	MODULE
	{
		name = WBICargoRecycler
		
		// The number of units of a resource to recycle per second.
		recycleSpeedUSec = 0.5

		// What percentage of the resources that can be recycled.
		recyclePercentage = 0.45

		// Flag to indicate whether or not to allow specialists to improve the recycle speed. 
		// Exactly how the specialist does that is a trade secret.
		UseSpecialistBonus = true

		// Per experience rating, how much to improve the recycle speed by.
		// The recycler part must have crew capacity.
		SpecialistBonus = 0.05

		// The skill required to improve the recycling speed.
		ExperienceEffect = "ConverterSkill"

		// Name of the effect to play from the part's EFFECTS node when the recycler is running.
//		runningEffect = 

		// The recycler itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 5
		}
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 50
		ConverterName = OmniConverter
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 0.5
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 200
		maxAmount = 200
		isTweakable = false
	}

	RESOURCE
	{
		name = Ore
		amount = 0
		maxAmount = 100
		isTweakable = true
	}
}

PATH_INDUSTRY:NEEDS[Sandcastle]
{
	author = Angel-125
	name = Sand Works
	title = Sand Works 3D Print Shop
	shortName = Sand Works
	needs = Sandcastle
	TechRequired = specializedConstruction
	description = Forget to bring some repair kits? Need a spare battery? The Sand Works 3D Print Shop has you covered. The Sandcastle uses additive manufacturing to turn ordinary ore into the parts that you need. It can do the reverse as well, thought not as efficiently.
	mass = 5
	requiredResource = Equipment
	requiredAmount = 2000
	reconfigureSkill = ConverterSkill
	templateTags = orbitalWorkshop
	logoPanel = WildBlueIndustries/000WildBlueTools/Decals/Factory_ClockWorks
	glowPanel = WildBlueIndustries/000WildBlueTools/Decals/Factory_ClockWorksGlow
	toolTip = Need a spare part? The Sand Works has you covered. Just be sure to stock up on Ore.
	toolTipTitle = Your First Sand Works!
 
	MODULE
	{
		name = WBIPrintShop

		// The maximum volume that the printer can print, in liters. Set to less than 0 for no restrictions.
		maxPrintVolume = 11000

		// The number of resource units per second that the printer can print.
		printSpeedUSec = 1

		// Flag to indicate whether or not to allow specialists to improve the print speed. 
		// Exactly how the specialist does that is a trade secret.
		UseSpecialistBonus = true

		// Per experience rating, how much to improve the print speed by.
		// The print shop part must have crew capacity.
		SpecialistBonus = 0.05

		// The skill required to improve the print speed.
		ExperienceEffect = "ConverterSkill"

		// Name of the effect to play from the part's EFFECTS node when the printer is running.
//		runningEffect = 

		// Name of the animation to play when the printer is running.
		animationName = PrinterAnim

		// The printer itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 10
		}

		// Normally, 3D printers can print from any category, but you can create specialized printers
		// that can only print from one or more categories. To do so, simply specify a CATEGORY_WHITELIST
		// and one or more whitelistedCategory entries.
//		CATEGORY_WHITELIST
//		{
//			whitelistedCategory = Pods
//			whitelistedCategory = Electrical
//			whitelistedCategory = none
//		}

		// Normally, 3D printers can print any part that fits in its maxPrintVolume, but you can create specialized printers
		// that can only print one or more parts. To do so, simply specify a PARTS_WHITELIST and one or more whitelistedPart entries.
		// Parts on the whitelist can be printed even if they show up on the global PARTS_BLACKLIST.
//		PARTS_WHITELIST
//		{
//			whitelistedPart = batteryPack
//			whitelistedPart = probeCoreCube
//		}

		// Normally, 3D printers can print any part that fits in its maxPrintVolume, but you can create specialized printers
		// that are incapable of printing parts on this list. To do so, simply specify a PARTS_BLACKLIST and one or more blacklistedPart entries.
//		PARTS_BLACKLIST
//		{
//			blacklistedPart = whoopieCushions
//			blacklistedPart = boomerangFish
//		}
	}

	MODULE
	{
		name = WBICargoRecycler
		
		// The number of units of a resource to recycle per second.
		recycleSpeedUSec = 0.5

		// What percentage of the resources that can be recycled.
		recyclePercentage = 0.45

		// Flag to indicate whether or not to allow specialists to improve the recycle speed. 
		// Exactly how the specialist does that is a trade secret.
		UseSpecialistBonus = true

		// Per experience rating, how much to improve the recycle speed by.
		// The recycler part must have crew capacity.
		SpecialistBonus = 0.05

		// The skill required to improve the recycling speed.
		ExperienceEffect = "ConverterSkill"

		// Name of the effect to play from the part's EFFECTS node when the recycler is running.
//		runningEffect = 

		// Name of the animation to play when the printer is running.
		animationName = PrinterAnim

		// The recycler itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 5
		}
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 1
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 100
		ConverterName = OmniConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
	}

	MODULE
	{
		name = WBIOmniConverter
		managedName = OmniConverter 2
		templateNodes = OMNICONVERTER
		BaseEfficiency = 1.0
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 100
		ConverterName = OmniConverter 2
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 2000
		maxAmount = 2000
		isTweakable = false
	}

	RESOURCE
	{
		name = Ore
		amount = 0
		maxAmount = 1000
		isTweakable = true
	}
}